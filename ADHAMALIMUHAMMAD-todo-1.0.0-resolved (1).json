{
  "openapi": "3.0.0",
  "info": {
    "title": "To-do-List",
    "description": "this is a simple back-end application implemented by express.js,node.js\n",
    "contact": {
      "email": "adhamalimuhammad@gmail.com"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/ADHAMALIMUHAMMAD/todo/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://tasksstore.swagger.io/v2"
    }
  ],
  "tags": [
    {
      "name": "tasks",
      "description": "Daily tasks",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/tasks": {
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Update an existing tasks",
        "operationId": "updatTask",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasks"
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "task not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "tasksstore_auth": [
              "write:taskss",
              "read:taskss"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Add a new task",
        "operationId": "addTasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasks"
        },
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "tasksstore_auth": [
              "write:taskss",
              "read:taskss"
            ]
          }
        ]
      }
    },
    "/tasks/findByStatus": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Finds task by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findtaskssByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "available",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tasks"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tasks"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "tasksstore_auth": [
              "write:taskss",
              "read:taskss"
            ]
          }
        ]
      }
    },
    "/tasks/{tasksId}": {
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Deletes a task",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tasksId",
            "in": "path",
            "description": "tasks id to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "tasks not found"
          }
        },
        "security": [
          {
            "tasksstore_auth": [
              "write:taskss",
              "read:taskss"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tasksId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "tasks": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "tasks status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "tasks"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "tasks": {
        "description": "tasks object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tasks"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/tasks"
            }
          }
        },
        "required": true
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "required": false
      }
    },
    "securitySchemes": {
      "tasksstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://tasksstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:taskss": "modify taskss in your account",
              "read:taskss": "read your taskss"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}